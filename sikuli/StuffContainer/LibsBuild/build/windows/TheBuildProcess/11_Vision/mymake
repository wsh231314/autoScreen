echo ------------ VisionProxy --------------------------
echo -----------------------------------------------
prefixdir=/usr/local
if [ "$NOWIS" != "" ]; then
	where g++
	prefixdir=/opt/windows_$NOWIS
	export LDFLAGS="-L$prefixdir/mingw/lib -L$prefixdir/lib"
	if [ "$NOWIS" == "64" ]; then
		export LDFLAGS="$LDFLAGS -L$prefixdir/lib$NOWIS"
	fi
	export CPPFLAGS="-I$prefixdir/include"
	cando=YES
else
	echo "Not possible! Needs a valid MinGW installation from http://win-builds.org/ !"
fi
echo -----------------------------------------------

if [ "$cando" == "YES" ]; then
	SRC="/C/Users/RaiMan/Documents/GitHub/SikuliX-2014/Natives/src/main/native"
	SikuliStuff=/C/MinGW/msys/1.0/stuff
	MGRP="Vision"
	MOD=VisionProxy
	OCV=248
	J64="1.7.0_55"
	J32="1.7.0_55"

	rm -f -R build
	mkdir build
	rm -f -R libs$NOWIS
	mkdir libs$NOWIS

	if [ "$NOWIS" == "64" ]; then
		echo --- 64-Bit
		JINC="/C/Program Files/Java/jdk$J64/include"
		JINC1="/C/Program Files/Java/jdk$J64/include/win32"
	else
		echo --- 32-Bit
		JINC="/C/Program Files (x86)/Java/jdk$J32/include"
		JINC1="/C/Program Files (x86)/Java/jdk$J32/include/win32"
		ADDLINK="-Wl,--kill-at"
	fi
	LIBS="$SikuliStuff/SikuliXBuild/ZStuff/libs$NOWIS"

	includeParm="-I/usr/include -I/usr/local/include" 
	includeParm="$includeParm -I$SikuliStuff/opencv/modules/core/include -I$SikuliStuff/opencv/modules/highgui/include -I$SikuliStuff/opencv/modules/imgproc/include"
	includeParm="$includeParm -I$SikuliStuff/tesseract/api -I$SikuliStuff/tesseract/ccutil -I$SikuliStuff/tesseract/ccstruct -I$SikuliStuff/tesseract/ccmain"

	echo ------------------ compile -----------------------------
	buildLibs=
	for step in cvgui finder pyramid-template-matcher sikuli-debug tessocr vision
	do
		echo -- $step
		g++ -c -O3  -MMD -MP $CPPFLAGS $includeParm -I"$JINC" -I"$JINC1" -MF build/$step.o.d -o build/$step.o $SRC/$MGRP/$step.cpp
		buildLibs="$buildLibs build/$step.o"
	done
	step=visionJAVA_wrap
	echo -- $step
	g++ -c -O3  -MMD -MP $CPPFLAGS $includeParm -I"$JINC" -I"$JINC1" -MF build/$step.o.d -o build/$step.o $SRC/$MGRP/$step.cxx
	buildLibs="$buildLibs build/$step.o"
	
	echo ------------------ linking -----------------------------
	extLibs="$LIBS/libtesseract-3.dll "
	for m in libopencv_java$OCV libopencv_core$OCV libopencv_imgproc$OCV libopencv_highgui$OCV libopencv_features2d$OCV libopencv_flann$OCV
	do
		extLibs="$extLibs $LIBS/$m.dll" 
	done

	g++  $ADDLINK -shared -s  -dynamic -o libs$NOWIS/$MOD.dll $buildLibs $extLibs 
	ls -l libs$NOWIS
fi